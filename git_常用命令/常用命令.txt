取得Git仓库
-1 初始化一个版本仓库
git init

-2 Clone远程版本库
git clone https://github.com/qinghuo90/git.learn.git

-3 查看远程仓库
git remote -v

提交你的修改
-4 添加当前修改的文件到暂存区
git add .

-5 如果你自动追踪文件，包括你已经手动删除的，状态为Deleted的文件
git add -u

-6 提交你的修改
git commit -m "你的注释"

-7推送你的更新到远程服务器，语法为git push [远程名] [本地分支]:[远程分支]
git push origin master

-8 查看文件状态
git status

-9 跟踪新文件
git add readme.txt

-10 从当前跟踪列表移除文件，并完全删除
git rm readme.txt

-11 仅在暂存区删除，保留文件在当前目录，不再跟踪
git rm -cached readme.txt

-12 重命名文件
git mv readme.txt readme

-13 查看提交的历史记录
git log

-14 修改最后一次提交注释的，利用-amend参数
git commit --amend

-15 忘记提交某些修改，下面的三条命令只会得到一个提交
git commit -m "add readme.txt"
git add readme_forgotten
git commit -amend

-16 假设你已经使用git add .，将修改过的文件a、b加到暂存区，现在你只想提交a文件，不想提交b文件，应该这样
git reset HEAD b
-17 取消对文件的修改
git checkout -- readme.txt

基本的分支管理
-18 创建一个分支
git branch test001

-19 切换工作目录到test001
git checkout test001

-20 将上面的命令合在一起，创建test001分支并切换到test001
git checkout -b test001

-21 合并test001分支，当前工作目录为master
git merge test001

-22 合并完成后，没有出现冲突，删除test001分支
git branch -d test001

-23 拉取远程仓库的数据，语法为git fetch [remote-name]
git fetch

-24 fetch会拉取最新的远程仓库数据，但不会自动到当前目录下，要手动合并
git pull

-25 查看远程仓库的信息
git remote show origin

-26 建立本地的dev分支追踪远程仓库的develop分支
git checkout -b dev origin/develop
